# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---

name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: null

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: npm – Install
        run: npm install

      - name:
        run: npx tfx login --service-url https://${{ env.AZDO_ACCOUNT }}.visualstudio.com/DefaultCollection --token ${{ env.AZDO_PAT }}
        env:
          AZDO_ACCOUNT: ${{ secrets.AZDO_ACCOUNT }}
          AZDO_PAT: ${{ secrets.AZDO_PAT }}

      - name: npm – Deploy
        run: npm run deploy

  update-dist:
    name: Update dist Folder
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: npm – Lint
        run: npm run lint

      - name: npm – Build Package
        run: npm run build:package

      - name: Git – Setup Authentication
        run: gh auth setup-git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git – Set Name
        run: git config --global user.name "PR Metrics"

      - name: Git – Set Email
        run: git config --global user.email "prmetrics@users.noreply.github.com"

      - name: Git – Checkout Branch
        run: git checkout ${GITHUB_REF#refs/heads/}

      - name: Git – Add Changed Files
        run: git add -A

      - name: Git – Commit Changed Files
        run: git commit -m "Updating dist folder"

      - name: Git – Push Changed Files
        run: git push

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: npm – Install Dependencies
        run: npm install

      - name: npm – Test Clean
        run: npm run clean

      - name: npm – Build
        run: npm run build

      - name: npm – Test
        run: npm run test

      - name: Install TFX CLI
        run: npm install -g tfx-cli

      - name: Release – Create
        run: tfx extension create --manifest-globs vss-extension.json --output-path ../ms-omex.PRMetrics.vsix
        working-directory: ${{ github.workspace }}/release

      - name: Release – Upload
        uses: actions/upload-artifact@v3
        with:
          name: PRMetrics
          path: ${{ github.workspace }}/ms-omex.PRMetrics.vsix

  test-github-action:
    name: Test GitHub Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: PR Metrics
        uses: ./
        env:
          PR_METRICS_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_STEP_DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG }}
        if: ${{ env.ACTIONS_STEP_DEBUG != '' }}

  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Markdown Links
        uses: gaurav-nelson/github-action-markdown-link-check@1.0.14
        with:
          config-file: .github/linters/markdown-link-check.json

      - name: Validate .babelrc – Download .babelrc.schema.json
        shell: pwsh
        run: Invoke-WebRequest -Uri 'https://json.schemastore.org/babelrc.json' -OutFile '.babelrc.schema.json'

      - name: Validate .babelrc – Update .babelrc.schema.json
        shell: pwsh
        run: |-
          $FileContent = Get-Content -Path '.babelrc.schema.json' -Raw
          $FileContent = $FileContent -replace 'draft-04/schema', 'draft-07/schema'
          Set-Content -NoNewline -Path '.babelrc.schema.json' -Value $FileContent

      - name: Validate .babelrc
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: .babelrc
          json-schema: .babelrc.schema.json

      - name: Validate .markdownlint.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: .markdownlint.json
          json-schema: https://raw.githubusercontent.com/DavidAnson/markdownlint/main/schema/markdownlint-config-schema.json
          use-draft: draft-07

      - name: Validate devcontainer.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: .devcontainer/devcontainer.json
          json-schema: https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.base.schema.json
          use-draft: draft-07

      - name: Validate vss-extension.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: src/vss-extension.json
          json-schema: https://json.schemastore.org/vss-extension.json

      - name: Validate task.json – Download task.schema.json
        shell: pwsh
        run: Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/microsoft/azure-pipelines-task-lib/master/tasks.schema.json' -OutFile 'task.schema.json'

      - name: Validate task.json – Update task.schema.json
        shell: pwsh
        run: |-
          $FileContent = Get-Content -Path 'task.schema.json' -Raw
          $FileContent = $FileContent -replace 'draft-04/schema', 'draft-07/schema'
          Set-Content -NoNewline -Path 'task.schema.json' -Value $FileContent

      - name: Validate task.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: src/task/task.json
          json-schema: task.schema.json

      - name: Validate task.loc.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: src/task/task.loc.json
          json-schema: task.schema.json

      - name: Validate tsconfig.json – Download tsconfig.schema.json
        shell: pwsh
        run: Invoke-WebRequest -Uri 'https://json.schemastore.org/tsconfig.json' -OutFile 'tsconfig.schema.json'

      - name: Validate tsconfig.json – Update tsconfig.schema.json
        shell: pwsh
        run: |-
          $FileContent = Get-Content -Path 'tsconfig.schema.json' -Raw
          $FileContent = $FileContent -replace 'draft-04/schema#', 'draft-07/schema'
          Set-Content -NoNewline -Path 'tsconfig.schema.json' -Value $FileContent

      - name: Validate tsconfig.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: src/task/tsconfig.json
          json-schema: tsconfig.schema.json

      - name: Validate typedoc.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: src/task/typedoc.json
          json-schema: https://typedoc.org/schema.json

      - name: Validate resources.resjson – Download resources.resjson.schema.json
        shell: pwsh
        run: Invoke-WebRequest -Uri 'https://json.schemastore.org/resjson.json' -OutFile 'resources.resjson.schema.json'

      - name: Validate resources.resjson – Update resources.resjson.schema.json
        shell: pwsh
        run: |-
          $FileContent = Get-Content -Path 'resources.resjson.schema.json' -Raw
          $FileContent = $FileContent -replace 'draft-04/schema#', 'draft-07/schema'
          Set-Content -NoNewline -Path 'resources.resjson.schema.json' -Value $FileContent

      - name: Validate resources.resjson (en-US)
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: src/task/Strings/resources.resjson/en-US/resources.resjson
          json-schema: resources.resjson.schema.json

  validate-codeql:
    name: Validate – CodeQL
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          config-file: .github/linters/codeql.yml
          queries: security-and-quality

      - name: Analyze
        uses: github/codeql-action/analyze@v2

  validate-linter:
    name: Validate – Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: npm – Install Dependencies
        run: npm install

      - name: Super Linter
        uses: github/super-linter@v4.9.7
        env:
          EDITORCONFIG_FILE_NAME: ../../.editorconfig
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_CONFIG_FILE: gitleaks.toml
          MARKDOWN_CONFIG_FILE: ../../.markdownlint.json
          TYPESCRIPT_ES_CONFIG_FILE: ../../.eslintrc.yml
          VALIDATE_JAVASCRIPT_STANDARD: false
          VALIDATE_TYPESCRIPT_STANDARD: false

...
