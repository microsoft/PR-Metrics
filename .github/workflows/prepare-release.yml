# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---

name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      major:
        description: The major element of the version number
        required: true
        type: number
        default: 1
      minor:
        description: The minor element of the version number
        required: true
        type: number
      patch:
        description: The patch element of the version number
        required: true
        type: number

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Version Name – README.md
        uses: mingjun97/file-regex-replace
        with:
          regex: 'uses: microsoft\\/PR-Metrics@v\\d+\\.\\d+\.\\d+'
          replacement: 'uses: microsoft/PR-Metrics@v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}'
          include: README\\.md

      - name: Version Name – package.json
        uses: mingjun97/file-regex-replace
        with:
          regex: '"version": "\\d+\\.\\d+\.\\d+"'
          replacement: '"version": "${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}"'
          include: package\\.json

      - name: Version Name – vss-extension.json
        uses: mingjun97/file-regex-replace
        with:
          regex: '"version": "\\d+\\.\\d+\.\\d+"'
          replacement: '"version": "${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}"'
          include: vss-extension\\.json

      - name: Version Name – task.json
        uses: mingjun97/file-regex-replace
        with:
          regex: '"friendlyName": "PR Metrics \\d+\\.\\d+\\.\\d+"'
          replacement: '"friendlyName": "PR Metrics ${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}"'
          include: src\\/task\\.json

      - name: Version Name – task.json & task.loc.json
        uses: mingjun97/file-regex-replace
        with:
          regex: '"Major": \\d+'
          replacement: '"Major": ${{ inputs.major }}'
          include: src\\/task(\\.loc)?\\.json

      - name: Version Name – task.json & task.loc.json
        uses: mingjun97/file-regex-replace
        with:
          regex: '"Minor": \\d+'
          replacement: '"Minor": ${{ inputs.minor }}'
          include: src\\/task(\\.loc)?\\.json

      - name: Version Name – task.json & task.loc.json
        uses: mingjun97/file-regex-replace
        with:
          regex: '"Patch": \d+'
          replacement: '"Patch": ${{ inputs.patch }}'
          include: src\\/task(\\.loc)?\\.json

      - name: Version Name – resources.resjson
        uses: mingjun97/file-regex-replace
        with:
          regex: '"friendlyName": "PR Metrics \\d+\\.\\d+\\.\\d+"'
          replacement: '"friendlyName": "PR Metrics ${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}"'
          include: src\\/task\\/Strings\\/resources\\.resjson\\/en-US\\/resources\\.resjson

      - name: Version Name – gitHubReposInvoker.ts
        uses: mingjun97/file-regex-replace
        with:
          regex: 'userAgent: string = \'PRMetrics\\/v\\d+\\.\\d+\\.\\d+\''
          replacement: 'userAgent: string = \'PRMetrics/v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}\''
          include: src\\/task\\/src\\/repos\\/gitHubReposInvoker\\.ts

      - name: Version Name – gitHubReposInvoker.spec.ts
        uses: mingjun97/file-regex-replace
        with:
          regex: 'expectedUserAgent: string = \'PRMetrics\\/v\\d+\\.\\d+\\.\\d+\''
          replacement: 'expectedUserAgent: string = \'PRMetrics/v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}\''
          include: src\\/task\\/tests\\/repos\\/gitHubReposInvoker\\.spec\\.ts

      - name: npm – Install NCU
        run: npm install -g npm-check-updates

      - name: npm – Update Dependencies
        run: ncu -u

      - name: npm – Update Transitive Dependencies
        run: npm update

      - name: npm – Build Package
        run: npm run build:package

      - name: Git – Setup Authentication
        run: gh auth setup-git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git – Set Name
        run: git config --global user.name "PR Metrics"

      - name: Git – Set Email
        run: git config --global user.email "prmetrics@users.noreply.github.com"

      - name: Git – Create Branch
        run: git checkout -b release/v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}

      - name: Git – Add Changed Files
        run: git add -A

      - name: Git – Commit Changed Files
        run: git commit -m "Updating dist folder"

      - name: Git – Push Changed Files
        run: git push --set-upstream origin release/v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}

      - name: PR – Create
        run: >
          gh pr create
          --title "[Autogenerated] Release v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}"
          --body "Autogenerated release for PR Metrics v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}."
          --label "release"
          --assignee "${{ github.actor }}"
          --reviewer "${{ github.actor }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

...
