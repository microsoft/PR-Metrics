# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---

name: Prepare Release

on:
  schedule:
    # Run every quarter.
    - cron: 0 0 1 */3 *
  workflow_dispatch:
    inputs:
      major:
        default: 1
        description: The major element of the version number
        required: true
        type: string
      minor:
        default: 4
        description: The minor element of the version number
        required: true
        type: string
      patch:
        default: 10
        description: The patch element of the version number
        required: true
        type: string

jobs:
  prepare-release:
    name: Prepare Release ${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}
    runs-on: ubuntu-latest
    env:
      version: ${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}
    permissions:
      pull-requests: write
    steps:
      - name: Validate major
        shell: pwsh
        run: '[int]::Parse(${{ inputs.major }})'

      - name: Validate minor
        shell: pwsh
        run: '[int]::Parse(${{ inputs.minor }})'

      - name: Validate patch
        shell: pwsh
        run: '[int]::Parse(${{ inputs.patch }})'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Fine-grained Personal Access Token (PAT) with the following permissions for microsoft/PR-Metrics:
          # - Read access to Metadata
          # - Read and Write access to Actions and Code (aka Contents)
          token: ${{ secrets.PREPARE_RELEASE_CHECKOUT }}

      - name: Version Number – README.md
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: PR-Metrics@v\d+\.\d+\.\d+
          replacement: PR-Metrics@v${{ env.version }}
          include: README\.md

      - name: Version Number – package.json
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"version": "\d+\.\d+\.\d+"'
          replacement: '"version": "${{ env.version }}"'
          include: package\.json

      - name: Version Number – vss-extension.json
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"version": "\d+\.\d+\.\d+"'
          replacement: '"version": "${{ env.version }}"'
          include: vss-extension\.json

      - name: Version Number – release-trigger.txt
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: ./.github/workflows/support/release-trigger.txt
          contents: ${{ env.version }}
          write-mode: overwrite

      - name: Version Number – task.json
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: PR Metrics v\d+\.\d+\.\d+
          replacement: PR Metrics v${{ env.version }}
          include: src\/task\/task\.json

      - name: Version Number – task.json & task.loc.json (major)
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"Major": \d+'
          replacement: '"Major": ${{ inputs.major }}'
          include: src\/task\/task(\.loc)?\.json

      - name: Version Number – task.json & task.loc.json (minor)
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"Minor": \d+'
          replacement: '"Minor": ${{ inputs.minor }}'
          include: src\/task\/task(\.loc)?\.json

      - name: Version Number – task.json & task.loc.json (patch)
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"Patch": \d+'
          replacement: '"Patch": ${{ inputs.patch }}'
          include: src\/task\/task(\.loc)?\.json

      - name: Version Number – resources.resjson
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: PR Metrics v\d+\.\d+\.\d+
          replacement: PR Metrics v${{ env.version }}
          include: src\/task\/Strings\/resources\.resjson\/en-US\/resources\.resjson

      - name: Version Number – gitHubReposInvoker.ts & gitHubReposInvoker.spec.ts
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: PRMetrics\/v\d+\.\d+\.\d+
          replacement: PRMetrics/v${{ env.version }}
          include: src\/task\/(src|tests)\/repos\/gitHubReposInvoker(\.spec)?\.ts

      - name: Increment Patch
        id: increment-patch
        shell: pwsh
        run: |
          $IncrementedPatch = [int]::Parse(${{ inputs.patch }}) + 1
          Write-Output -InputObject "INCREMENTED_PATCH=$IncrementedPatch" >> $Env:GITHUB_OUTPUT

      - name: Version Number – prepare-release.yml (major)
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '(major:\s+default: )\d+'
          replacement: $1${{ inputs.major }}
          include: .github\/workflows\/prepare-release\.yml

      - name: Version Number – prepare-release.yml (minor)
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '(minor:\s+default: )\d+'
          replacement: $1${{ inputs.minor }}
          include: .github\/workflows\/prepare-release\.yml

      - name: Version Number – prepare-release.yml (patch)
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '(patch:\s+default: )\d+'
          replacement: $1${{ steps.increment-patch.outputs.INCREMENTED_PATCH }}
          include: .github\/workflows\/prepare-release\.yml

      - name: npm – Install NCU
        run: npm install -g npm-check-updates

      - name: npm – Update Dependencies
        run: ncu -u

      - name: npm – Update Transitive Dependencies
        run: npm update

      - name: npm – Build Package
        run: npm run build:package

      - name: Git – Set Name
        run: git config --global user.name "github-actions[bot]"

      - name: Git – Set Email
        run: git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Git – Create Branch
        run: git checkout -b release/v${{ env.version }}

      - name: Git – Add Changed Files
        run: git add -A

      - name: Git – Commit Changed Files
        run: git commit -m "Updating dist folder"

      - name: Git – Push Changed Files
        run: git push --set-upstream origin release/v${{ env.version }}

      - name: PR – Create
        run: >
          gh pr create
          --title "[Autogenerated] Release v${{ env.version }}"
          --body "Autogenerated release for PR Metrics v${{ env.version }}."
          --label "release"
          --assignee "${{ github.actor }}"
          --reviewer "${{ github.actor }}"
        env:
          # Fine-grained Personal Access Token (PAT) with the following permissions for microsoft/PR-Metrics:
          # - Read access to Metadata
          # - Read and Write access to Pull Requests
          GITHUB_TOKEN: ${{ secrets.PREPARE_RELEASE_PR_CREATE }}

      - name: PR – Get Number
        uses: jwalton/gh-find-current-pr@v1.3.2
        id: prGetNumber

      - name: PR – Create Comment 1
        uses: bluwy/substitute-string-action@v2.0.1
        id: prCreateComment
        with:
          _input-file: ./.github/workflows/support/prepare-release-comment1.md
          _format-key: '%%key%%'
        env:
          INPUT_PR: ${{ steps.prGetNumber.outputs.pr }}

      - name: PR – Write Comment 1 to File
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: ./.github/workflows/support/prepare-release-comment1.md
          contents: ${{ steps.prCreateComment.outputs.result }}
          write-mode: overwrite

      - name: PR – Comment 1
        run: gh pr comment --body-file "./.github/workflows/support/prepare-release-comment1.md"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: PR – Comment 2
        run: gh pr comment --body-file "./.github/workflows/support/prepare-release-comment2.md"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

...


# # Copyright (c) Microsoft Corporation.
# # Licensed under the MIT License.

# ---

# name: Release

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - .github/workflows/support/release-trigger.txt
#   workflow_dispatch: null

# jobs:
#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     permissions: {}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Install Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 19.x

#       - name: npm – Install Dependencies
#         run: npm install

#       - name: npm – Build
#         run: npm run build:release

#       - name: Install TFX CLI
#         run: npm install -g tfx-cli

#       - name: Release – Create
#         run: tfx extension create --manifest-globs vss-extension.json --output-path ../ms-omex.PRMetrics.vsix
#         working-directory: ${{ github.workspace }}/release

#       - name: Release – Publish
#         uses: actions/upload-artifact@v3
#         with:
#           name: ms-omex.PRMetrics
#           path: ${{ github.workspace }}/ms-omex.PRMetrics.vsix

# ...
