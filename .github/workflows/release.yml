# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---

name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      major:
        description: The major element of the version number
        required: true
        type: number
        default: 1
      minor:
        description: The minor element of the version number
        required: true
        type: number
      patch:
        description: The patch element of the version number
        required: true
        type: number

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-release:
    name: Prepare Release ${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Version Number – README.md
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: PR-Metrics@v\d+\.\d+\.\d+
          replacement: PR-Metrics@v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}
          include: README\.md

      - name: Version Number – package.json
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"version": "\d+\.\d+\.\d+"'
          replacement: '"version": "${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}"'
          include: package\.json

      - name: Version Number – vss-extension.json
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"version": "\d+\.\d+\.\d+"'
          replacement: '"version": "${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}"'
          include: vss-extension\.json

      - name: Version Number – task.json
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: PR Metrics \d+\.\d+\.\d+
          replacement: PR Metrics v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}
          include: src\/task\.json

      - name: Version Number – task.json & task.loc.json
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"Major": \d+'
          replacement: '"Major": ${{ inputs.major }}'
          include: src\/task(\.loc)?\.json

      - name: Version Number – task.json & task.loc.json
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"Minor": \d+'
          replacement: '"Minor": ${{ inputs.minor }}'
          include: src\/task(\.loc)?\.json

      - name: Version Number – task.json & task.loc.json
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"Patch": \d+'
          replacement: '"Patch": ${{ inputs.patch }}'
          include: src\/task(\.loc)?\.json

      - name: Version Number – resources.resjson
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: PR Metrics v\d+\.\d+\.\d+
          replacement: PR Metrics v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}
          include: src\/task\/Strings\/resources\.resjson\/en-US\/resources\.resjson

      - name: Version Number – gitHubReposInvoker.ts & gitHubReposInvoker.spec.ts
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: PRMetrics\/v\d+\.\d+\.\d+
          replacement: PRMetrics/v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}
          include: src\/task\/(src|tests)\/repos\/gitHubReposInvoker(\.spec)?\.ts

      - name: npm – Install NCU
        run: npm install -g npm-check-updates

      - name: npm – Update Dependencies
        run: ncu -u

      - name: npm – Update Transitive Dependencies
        run: npm update

      - name: npm – Build Package
        run: npm run build:package

      - name: Git – Setup Authentication
        run: gh auth setup-git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git – Set Name
        run: git config --global user.name "PR Metrics"

      - name: Git – Set Email
        run: git config --global user.email "prmetrics@users.noreply.github.com"

      - name: Git – Create Branch
        run: git checkout -b release/v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}

      - name: Git – Add Changed Files
        run: git add -A

      - name: Git – Commit Changed Files
        run: git commit -m "Updating dist folder"

      - name: Git – Push Changed Files
        run: git push --set-upstream origin release/v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}

      - name: PR – Create
        run: >
          gh pr create
          --title "[Autogenerated] Release v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}"
          --body "Autogenerated release for PR Metrics v${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}."
          --label "release"
          --assignee "${{ github.actor }}"
          --reviewer "${{ github.actor }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

...

# # Copyright (c) Microsoft Corporation.
# # Licensed under the MIT License.

# ---

# name: Release

# on:
#   release:
#     types:
#       - created
#   workflow_dispatch: null

# jobs:
#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Install Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 19.x

#       - name: npm – Install Dependencies
#         run: npm install

#       - name: npm – Build
#         run: npm run build:release

#       - name: Install TFX CLI
#         run: npm install -g tfx-cli

#       - name: Release – Create
#         run: tfx extension create --manifest-globs vss-extension.json --output-path ../ms-omex.PRMetrics.vsix
#         working-directory: ${{ github.workspace }}/release

#       - name: Release – Publish
#         uses: actions/upload-artifact@v3
#         with:
#           name: ms-omex.PRMetrics
#           path: ${{ github.workspace }}/ms-omex.PRMetrics.vsix

# ...
