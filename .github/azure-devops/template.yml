# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---

parameters:
  - name: testInstance
    type: boolean
    default: false

stages:
  - stage: Build
    displayName: Build
    jobs:
      - ${{ if not(parameters.testInstance) }}:
          - job: Deploy
            displayName: Deploy
            pool:
              name: Azure-Pipelines-1ESPT-ExDShared
              os: linux
              image: ubuntu-latest
            steps:
              - checkout: self
                displayName: Checkout

              - task: NodeTool@0
                displayName: Install Node.js
                inputs:
                  versionSpec: 22.x

              - task: Npm@1
                displayName: npm – Install
                inputs:
                  command: install

              - task: Npm@1
                displayName: npm – Build Release
                inputs:
                  command: custom
                  customCommand: run build:release

              - task: TfxInstaller@4
                displayName: Azure DevOps – Install TFX CLI
                inputs:
                  version: v0.x

              - task: AzureCLI@2
                displayName: Azure DevOps – Acquire Access Token
                inputs:
                  azureSubscription: PR Metrics
                  scriptType: pscore
                  scriptLocation: inlineScript
                  inlineScript: |
                    $ACCESS_TOKEN = az account get-access-token --query accessToken --resource 499b84ac-1321-427f-aa17-267ca6975798 -o tsv
                    Write-Host -Object "##vso[task.setvariable variable=ACCESS_TOKEN;issecret=true]$ACCESS_TOKEN"

              - pwsh: |
                  tfx login --service-url https://dev.azure.com/$($env:ADO_ACCOUNT) --token $env:ACCESS_TOKEN
                  Write-Host -Object '##vso[task.setvariable variable=ACCESS_TOKEN;issecret=true]REDACTED'
                displayName: Azure DevOps – Sign-in
                env:
                  ACCESS_TOKEN: $(ACCESS_TOKEN)
                  ADO_ACCOUNT: $(ADO_ACCOUNT)

              - bash: tfx build tasks delete --task-id 907d3b28-6b37-4ac7-ac75-9631ee53e512 --no-prompt
                displayName: Azure DevOps – Delete Old Task
                continueOnError: true

              - bash: tfx build tasks upload --task-path release/task --no-prompt
                displayName: Azure DevOps – Deploy

      - job: Delay
        displayName: Delay
        pool: server
        steps:
          - task: Delay@1
            displayName: Wait for Deployment
            inputs:
              delayForMinutes: 5

      - job: PRMetrics_macOS
        displayName: PR Metrics – macOS
        dependsOn: Delay
        pool:
          ${{ if parameters.testInstance }}:
            vmImage: macOS-latest
          ${{ else }}:
            name: Azure Pipelines
            os: macOS
            image: macos-latest
        variables:
          - name: System.Debug
            value: true
        steps:
          - checkout: self
            displayName: Checkout
            fetchDepth: 0

          - task: PRMetrics@1
            displayName: PR Metrics
            env:
              PR_METRICS_ACCESS_TOKEN: $(GITHUB_PAT)
            inputs:
              file-matching-patterns: |
                **/*
                !dist/*
                !package-lock.json

      - job: PRMetrics_Ubuntu
        displayName: PR Metrics – Ubuntu
        dependsOn: PRMetrics_macOS
        pool:
          ${{ if parameters.testInstance }}:
            vmImage: ubuntu-latest
          ${{ else }}:
            name: Azure-Pipelines-1ESPT-ExDShared
            os: linux
            image: ubuntu-latest
        variables:
          - name: System.Debug
            value: true
        steps:
          - checkout: self
            displayName: Checkout
            fetchDepth: 0

          - task: PRMetrics@1
            displayName: PR Metrics
            env:
              PR_METRICS_ACCESS_TOKEN: $(GITHUB_PAT)
            inputs:
              file-matching-patterns: |
                **/*
                !dist/*
                !package-lock.json

      - job: PRMetrics_Windows
        displayName: PR Metrics – Windows
        dependsOn: PRMetrics_Ubuntu
        pool:
          ${{ if parameters.testInstance }}:
            vmImage: windows-latest
          ${{ else }}:
            name: Azure-Pipelines-1ESPT-ExDShared
            os: windows
            image: windows-latest
        variables:
          - name: System.Debug
            value: true
        steps:
          - checkout: self
            displayName: Checkout
            fetchDepth: 0

          - task: PRMetrics@1
            displayName: PR Metrics
            env:
              PR_METRICS_ACCESS_TOKEN: $(GITHUB_PAT)
            inputs:
              file-matching-patterns: |
                **/*
                !dist/*
                !package-lock.json

      - job: Validation
        displayName: Validation
        pool:
          ${{ if parameters.testInstance }}:
            vmImage: windows-latest
          ${{ else }}:
            name: Azure-Pipelines-1ESPT-ExDShared
            os: windows
            image: windows-latest
        steps:
          - task: ComponentGovernanceComponentDetection@0
            displayName: Component Detection

          - task: PoliCheck@2
            displayName: PoliCheck
            inputs:
              targetType: F
              optionsFC: 1
              optionsUEPATH: $(Build.SourcesDirectory)/.github/azure-devops/PoliCheckExclusions.xml

          - task: PublishSecurityAnalysisLogs@3
            displayName: Guardian – Publish Artifacts

          - task: PostAnalysis@2
            displayName: Guardian – Perform Analysis
            inputs:
              GdnBreakPolicyMinSev: Note
              GdnBreakGdnToolGosecSeverity: Default
              GdnBreakPolicy: M365

...
