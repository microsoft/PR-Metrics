# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---
name: Release – Phase 1 (Internal)
description: Internal action for Release Phase 1 that handles version updates and creates PR

inputs:
  major:
    description: Major version number
    required: true
  minor:
    description: Minor version number
    required: true
  patch:
    description: Patch version number
    required: true
  github-token:
    description: GitHub token for API access
    required: true
  release-pr-create-token:
    description: Token for creating pull requests
    required: true

runs:
  using: composite
  steps:
    - name: Validate major
      shell: pwsh
      run: "[int]::Parse(${{ inputs.major }})"

    - name: Validate minor
      shell: pwsh
      run: "[int]::Parse(${{ inputs.minor }})"

    - name: Validate patch
      shell: pwsh
      run: "[int]::Parse(${{ inputs.patch }})"

    - name: Set version environment variable
      shell: bash
      run: echo "version=${{ inputs.major }}.${{ inputs.minor }}.${{ inputs.patch }}" >> $GITHUB_ENV

    - name: Version Number – README.md
      shell: pwsh
      run: |-
        $FilePath = 'README.md'
        $FileContents = Get-Content -Path $FilePath
        $FileContents = $FileContents -replace 'PR-Metrics@v\d+\.\d+\.\d+', 'PR-Metrics@v${{ env.version }}'
        Set-Content -Path $FilePath -Value $FileContents

    - name: Version Number – package.json
      shell: pwsh
      run: |-
        $FilePath = 'package.json'
        $FileContents = Get-Content -Path $FilePath
        $FileContents = $FileContents -replace '"version": "\d+\.\d+\.\d+"', '"version": "${{ env.version }}"'
        Set-Content -Path $FilePath -Value $FileContents

    - name: Version Number – vss-extension.json
      shell: pwsh
      run: |-
        $FilePath = 'src/vss-extension.json'
        $FileContents = Get-Content -Path $FilePath
        $FileContents = $FileContents -replace '"version": "\d+\.\d+\.\d+"', '"version": "${{ env.version }}"'
        Set-Content -Path $FilePath -Value $FileContents

    - name: Version Number – release-phase-2-trigger.txt
      shell: pwsh
      run: Set-Content -Path '.github/workflows/support/release-phase-2-trigger.txt' -Value ${{ env.version }}

    - name: Version Number – task.json
      shell: pwsh
      run: |-
        $FilePath = 'src/task/task.json'
        $FileContents = Get-Content -Path $FilePath
        $FileContents = $FileContents -replace 'PR Metrics v\d+\.\d+\.\d+', 'PR Metrics v${{ env.version }}'
        $FileContents = $FileContents -replace '"Major": \d+', '"Major": ${{ inputs.major }}'
        $FileContents = $FileContents -replace '"Minor": \d+', '"Minor": ${{ inputs.minor }}'
        $FileContents = $FileContents -replace '"Patch": \d+', '"Patch": ${{ inputs.patch }}'
        Set-Content -Path $FilePath -Value $FileContents

    - name: Version Number – task.loc.json
      shell: pwsh
      run: |-
        $FilePath = 'src/task/task.loc.json'
        $FileContents = Get-Content -Path $FilePath
        $FileContents = $FileContents -replace '"Major": \d+', '"Major": ${{ inputs.major }}'
        $FileContents = $FileContents -replace '"Minor": \d+', '"Minor": ${{ inputs.minor }}'
        $FileContents = $FileContents -replace '"Patch": \d+', '"Patch": ${{ inputs.patch }}'
        Set-Content -Path $FilePath -Value $FileContents

    - name: Version Number – resources.resjson
      shell: pwsh
      run: |-
        $FilePath = 'src/task/Strings/resources.resjson/en-US/resources.resjson'
        $FileContents = Get-Content -Path $FilePath
        $FileContents = $FileContents -replace 'PR Metrics v\d+\.\d+\.\d+', 'PR Metrics v${{ env.version }}'
        Set-Content -Path $FilePath -Value $FileContents

    - name: Version Number – gitHubReposInvoker.ts
      shell: pwsh
      run: |-
        $FilePath = 'src/task/src/repos/gitHubReposInvoker.ts'
        $FileContents = Get-Content -Path $FilePath
        $FileContents = $FileContents -replace 'PRMetrics\/v\d+\.\d+\.\d+', 'PRMetrics/v${{ env.version }}'
        Set-Content -Path $FilePath -Value $FileContents

    - name: Version Number – gitHubReposInvoker.spec.ts
      shell: pwsh
      run: |-
        $FilePath = 'src/task/tests/repos/gitHubReposInvoker.spec.ts'
        $FileContents = Get-Content -Path $FilePath
        $FileContents = $FileContents -replace 'PRMetrics\/v\d+\.\d+\.\d+', 'PRMetrics/v${{ env.version }}'
        Set-Content -Path $FilePath -Value $FileContents

    - name: Version Number – Increment Patch
      id: increment-patch
      shell: pwsh
      run: |-
        $IncrementedPatch = [int]::Parse(${{ inputs.patch }}) + 1
        Write-Output -InputObject "INCREMENTED_PATCH=$IncrementedPatch" >> $Env:GITHUB_OUTPUT

    - name: Version Number – release-phase-1.yml
      shell: pwsh
      run: |-
        $FilePath = '.github/workflows/release-phase-1.yml'
        $FileContents = Get-Content -Raw $FilePath
        $FileContents = $FileContents -replace '(?<Yaml>major: )\d+', '${Yaml}${{ inputs.major }}'
        $FileContents = $FileContents -replace '(?<Yaml>minor: )\d+', '${Yaml}${{ inputs.minor }}'
        $FileContents = $FileContents -replace '(?<Yaml>patch: )\d+', '${Yaml}${{ steps.increment-patch.outputs.INCREMENTED_PATCH }}'
        Set-Content -Path $FilePath -Value $FileContents.Substring(0, $FileContents.Length - 1)  # Remove the trailing newline.

    - name: Git Setup & Push
      uses: ./.github/actions/git-setup-and-push
      with:
        phase: 1
        version: ${{ env.version }}
        github-token: ${{ inputs.github-token }}

    - name: PR – Create
      shell: pwsh
      run: >-
        gh pr create
        --title "[Autogenerated] Release v${{ env.version }}"
        --body "Autogenerated release for PR Metrics v${{ env.version }}. This includes the latest dependency updates."
        --label "release"
      env:
        # Fine-grained Personal Access Token (PAT) with the following permissions for microsoft/PR-Metrics:
        # - Read access to Metadata
        # - Read and Write access to Pull Requests
        GITHUB_TOKEN: ${{ inputs.release-pr-create-token }}

    - name: npm – Install Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: 20.17.0

    - name: npm – Install
      shell: pwsh
      run: npm install

    - name: npm – Update Dependencies
      shell: pwsh
      run: npx ncu -u

    - name: npm – Update Transitive Dependencies
      shell: pwsh
      run: npm update

    - name: Git – Add Changed Files
      shell: pwsh
      run: git add -A

    - name: Git – Commit Changed Files
      shell: pwsh
      run: git commit -m "Updating dependencies"

    - name: Git – Pull Changed Files
      shell: pwsh
      run: git pull

    - name: Git – Push Changed Files
      shell: pwsh
      run: git push --set-upstream origin release/v${{ env.version }}-phase-1
